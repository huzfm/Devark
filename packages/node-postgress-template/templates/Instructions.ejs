# Project Setup Instructions

This document provides step-by-step instructions to set up and run the project with PostgreSQL locally or using a cloud
service.


---

## 1. Environment Variables

1. Copy the example environment file:
```bash
cp .env.example .env
```

2. Open `.env` in your editor and update the values (such as `DATABASE_URL`, API keys, etc.) with your own credentials.

---

## 2. Database Setup

### Option A â€“ Run PostgreSQL Locally

1. **Install PostgreSQL**
- [Download PostgreSQL](https://www.postgresql.org/download/) and install it on your system.
- During installation, note down your username (`postgres`) and password.

2. **Start PostgreSQL service**
```bash
# On Linux / Mac
sudo service postgresql start

# On Windows (via PowerShell, if installed via pgAdmin or installer)
net start postgresql-x64-16
```

3. **Login to PostgreSQL**
```bash
psql -U postgres
```

4. **Create a database for the project**
```sql
CREATE DATABASE myappdb;
```

5. Update `.env` with your local database connection string:
```
DATABASE_URL=postgresql://postgres:<your_password>@localhost:5432/myappdb
   ```

   ---

   ### Option B â€“ Use a Cloud Database

   Instead of running locally, you can use a managed PostgreSQL provider:

   - [NeonDB](https://neon.tech/) (serverless Postgres)
   - [Supabase](https://supabase.com/)
   - [Railway](https://railway.app/)
   - [Render](https://render.com/)

   After creating a database, copy the connection string they provide and paste it into `.env`:

   ```
   DATABASE_URL=postgresql://<username>:<password>@<host>:5432/<database_name>
               ```

               ---

               ---

               ## 5. Prisma Setup

               This will create a `prisma/schema.prisma` file and update `.env`.

               2. Define your database models inside `prisma/schema.prisma`.

               3. Run database migrations:
               ```bash
               npx prisma migrate dev --name init
               ```

               4. Generate Prisma Client:
               ```bash
               npx prisma generate
               ```

               5. Open Prisma Studio (database GUI):
               ```bash
               npx prisma studio
               ```

               ---

               ## 6. Run Database Migrations (again if needed)

               ```bash
               npx prisma migrate dev
               ```

               ---

               ## 7. Start the Application

               ```bash
               npm run dev
               ```

               The app should now be running locally ðŸŽ‰

               ---

               ## 8. Useful Commands (as given in console)

               - Login to PostgreSQL:
               ```bash
               psql -U postgres
               ```
               - Check current databases:
               ```sql
               \l
               ```
               - Connect to a database:
               ```sql
               \c myappdb
               ```
               - List tables:
               ```sql
               \dt
               ```

               ---

               ## 9. Troubleshooting

               - If `psql` is not recognized, ensure PostgreSQL is added to your system PATH.
               - If using a cloud database, make sure your IP is whitelisted.
               - Double-check `.env` matches the actual credentials.

               ---