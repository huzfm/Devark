import express from "express";
import mongoose from "mongoose";
import morgan from "morgan";
import dotenv from "dotenv";
import helmet from "helmet";
import cors from "cors";
import userRoutes from "./routes/userRoutes.js";

dotenv.config();

const app = express();

app.use(express.json());
app.use(morgan("dev"));
app.use(helmet());
app.use(
cors({
origin: "*", //adjust for your frontend domain
methods: ["GET", "POST", "PUT", "DELETE"],
})
);
// Database Connection
mongoose
.connect(process.env.MONGO_URI, {
autoIndex: false, // Better performance in production
serverSelectionTimeoutMS: 5000,
})
.then(() => console.log(" Connected to MongoDB Database successfully"))
.catch((err) => {
console.error("DB Connection Error:", err.message);
process.exit(1);
});
// Routes

app.use("/api/users", userRoutes);

app.get("/", (req, res) =>
res.json({
message: "Node mongo express server is running",
success: true,
time: new Date().toISOString(),
})
);

app.use((req, res) => {
res.status(404).json({ message: "Route not found" });
});

app.use((err, req, res, next) => {
console.error("Internal Server Error:", err.stack);
res.status(500).json({
success: false,
message: "Internal server error",
});
});

const PORT = process.env.PORT || 5000;
app.listen(PORT, () =>
console.log(`Server running on http://localhost:${PORT}`)
);